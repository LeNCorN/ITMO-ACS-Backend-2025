/* eslint-disable */
export default async () => {
    const t = {
        ["./auth/dto/registration.dto"]: await import("./auth/dto/registration.dto"),
        ["./reviews/entities/review.entity"]: await import("./reviews/entities/review.entity"),
        ["./admin/entities/utm.entity"]: await import("./admin/entities/utm.entity"),
        ["./users/entities/address.entity"]: await import("./users/entities/address.entity"),
        ["./admin/dto/user-detail.dto"]: await import("./admin/dto/user-detail.dto"),
        ["./users/entities/ip-detail.entity"]: await import("./users/entities/ip-detail.entity"),
        ["./auctions/entities/auction.entity"]: await import("./auctions/entities/auction.entity"),
        ["./users/entities/user.entity"]: await import("./users/entities/user.entity"),
        ["./auctions/dto/auction-stats.dto"]: await import("./auctions/dto/auction-stats.dto"),
        ["./notifications/entities/notification.entity"]: await import("./notifications/entities/notification.entity"),
        ["./payments/entities/transaction.entity"]: await import("./payments/entities/transaction.entity"),
        ["./admin/entities/localization.entity"]: await import("./admin/entities/localization.entity"),
        ["./admin/brands/entities/brand.entity"]: await import("./admin/brands/entities/brand.entity"),
        ["./auctions/entities/category.entity"]: await import("./auctions/entities/category.entity"),
        ["./news/entities/news.entity"]: await import("./news/entities/news.entity"),
        ["./faq/entities/faq.entity"]: await import("./faq/entities/faq.entity"),
        ["./referrals/entities/referral.entity"]: await import("./referrals/entities/referral.entity"),
        ["./fortune/entities/spin-item.entity"]: await import("./fortune/entities/spin-item.entity"),
        ["./fortune/entities/fortune-win.entity"]: await import("./fortune/entities/fortune-win.entity"),
        ["./rato-tasks/entities/rato-task.entity"]: await import("./rato-tasks/entities/rato-task.entity"),
        ["./user-tasks/entities/user-task.entity"]: await import("./user-tasks/entities/user-task.entity"),
        ["./bonuses/entities/bonus.entity"]: await import("./bonuses/entities/bonus.entity"),
        ["./promocodes/entities/promocode.entity"]: await import("./promocodes/entities/promocode.entity"),
        ["./admin/dto/localization.dto"]: await import("./admin/dto/localization.dto"),
        ["./common/dto/status.dto"]: await import("./common/dto/status.dto"),
        ["./auth/dto/login.dto"]: await import("./auth/dto/login.dto"),
        ["./referrals/dto/check-code.dto"]: await import("./referrals/dto/check-code.dto"),
        ["./settings/entities/settings.entity"]: await import("./settings/entities/settings.entity"),
        ["./bots/entities/bot.entity"]: await import("./bots/entities/bot.entity"),
        ["./bots/dto/bot-stats.dto"]: await import("./bots/dto/bot-stats.dto"),
        ["./bots/entities/bot-strategy.entity"]: await import("./bots/entities/bot-strategy.entity"),
        ["./geo/dto/geo.dto"]: await import("./geo/dto/geo.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./auth/dto/registration.dto"), { "UtmMarkerDto": { utm_id: { required: true, type: () => Number }, utm_source: { required: true, type: () => String }, utm_medium: { required: true, type: () => String }, utm_campaign: { required: true, type: () => String }, utm_term: { required: true, type: () => String }, utm_content: { required: true, type: () => String } }, "RegistrationUserDto": { email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String }, username: { required: false, type: () => String }, referral_code: { required: true, type: () => String, nullable: true }, utm: { required: false, type: () => t["./auth/dto/registration.dto"].UtmMarkerDto } } }], [import("./common/entities/pagination.entity"), { "PaginatedResponse": { total_items: { required: false, type: () => Number } } }], [import("./reviews/entities/review.entity"), { "ReviewUserEntity": { user_id: { required: true, type: () => Number }, username: { required: true, type: () => String, nullable: true }, first_name: { required: true, type: () => String, nullable: true }, last_name: { required: true, type: () => String, nullable: true }, instagram: { required: true, type: () => String, nullable: true }, language: { required: true, type: () => String, nullable: true }, avatar_url: { required: true, type: () => String, nullable: true } }, "ReviewAuctionEntity": { auction_id: { required: true, type: () => Number }, title: { required: true, type: () => String }, end_price: { required: true, type: () => Number } }, "ReviewEntity": { review_id: { required: true, type: () => Number }, user: { required: true, type: () => t["./reviews/entities/review.entity"].ReviewUserEntity }, auction: { required: true, type: () => t["./reviews/entities/review.entity"].ReviewAuctionEntity }, comment: { required: true, type: () => String }, created_at: { required: true, type: () => Date }, media: { required: true, type: () => [t["./reviews/entities/review.entity"].ReviewMediaEntity] } }, "ReviewMediaEntity": { review_id: { required: true, type: () => Number }, review_media_id: { required: true, type: () => Number }, url: { required: true, type: () => String }, media_type: { required: true, type: () => Object } }, "ReviewResponseEntity": { items: { required: true, type: () => [t["./reviews/entities/review.entity"].ReviewEntity] } } }], [import("./admin/entities/utm.entity"), { "UtmEntity": { utm_id: { required: true, type: () => Number }, utm_source: { required: true, type: () => String }, utm_medium: { required: true, type: () => String }, utm_campaign: { required: true, type: () => String }, utm_term: { required: true, type: () => String }, utm_content: { required: true, type: () => String } } }], [import("./users/entities/address.entity"), { "AddressEntity": { address_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, house_number: { required: true, type: () => String, nullable: true }, street: { required: true, type: () => String, nullable: true }, country: { required: true, type: () => String, nullable: true }, city: { required: true, type: () => String, nullable: true }, zip_code: { required: true, type: () => String, nullable: true } } }], [import("./admin/dto/user-detail.dto"), { "UserDetailDto": { user_id: { required: true, type: () => Number }, ftd_date: { required: true, type: () => Date, nullable: true }, ftd_sum: { required: true, type: () => Number, nullable: true }, rd_count: { required: true, type: () => Number, nullable: true }, rd_sum: { required: true, type: () => Number, nullable: true }, ngr: { required: true, type: () => Number }, total_deps: { required: true, type: () => Number }, deposit_sum: { required: true, type: () => Number }, rd_avg: { required: true, type: () => Number }, auctions_count: { required: true, type: () => Number }, win_count: { required: true, type: () => Number }, utm_marker: { required: true, type: () => t["./admin/entities/utm.entity"].UtmEntity, nullable: true } } }], [import("./users/entities/ip-detail.entity"), { "IpDetailEntity": { ip_address: { required: true, type: () => String }, created_at: { required: true, type: () => Date }, city: { required: true, type: () => String }, countryCode: { required: true, type: () => String }, hosting: { required: true, type: () => Boolean }, isp: { required: true, type: () => String }, lat: { required: true, type: () => Number }, lon: { required: true, type: () => Number }, mobile: { required: true, type: () => Boolean }, proxy: { required: true, type: () => Boolean }, regionName: { required: true, type: () => String }, status: { required: true, type: () => String }, zip: { required: true, type: () => String } } }], [import("./users/entities/user.entity"), { "UserEntity": { user_id: { required: true, type: () => Number }, created_at: { required: true, type: () => Date }, updated_at: { required: true, type: () => Date }, email: { required: true, type: () => String, nullable: true }, username: { required: true, type: () => String, nullable: true }, avatar_url: { required: true, type: () => String, nullable: true }, language: { required: true, type: () => String, nullable: true }, mail_promo: { required: true, type: () => Boolean }, mail_rate_result: { required: true, type: () => Boolean }, mail_new_auctions: { required: true, type: () => Boolean }, mail_confirmed: { required: true, type: () => Boolean }, first_name: { required: true, type: () => String, nullable: true }, instagram: { required: true, type: () => String, nullable: true }, phone_number: { required: true, type: () => String, nullable: true }, last_name: { required: true, type: () => String, nullable: true }, rato_balance: { required: true, type: () => Number }, bonus_balance: { required: true, type: () => Number }, address: { required: true, type: () => t["./users/entities/address.entity"].AddressEntity, nullable: true }, referral_code: { required: true, type: () => String, nullable: true }, free_spin_amount: { required: true, type: () => Number }, stats: { required: false, type: () => t["./admin/dto/user-detail.dto"].UserDetailDto }, ip_address: { required: true, type: () => String, nullable: true }, is_bot: { required: true, type: () => Boolean }, ip_detail: { required: false, type: () => t["./users/entities/ip-detail.entity"].IpDetailEntity, nullable: true } } }], [import("./auctions/entities/auction.entity"), { "Category": { auction_category_id: { required: true, type: () => Number }, title: { required: true, type: () => String } }, "Brand": { auction_brand_id: { required: true, type: () => Number }, title: { required: true, type: () => String } }, "AuctionEntity": { auction_id: { required: true, type: () => Number }, category: { required: true, type: () => t["./auctions/entities/auction.entity"].Category, nullable: true }, brand: { required: false, type: () => t["./auctions/entities/auction.entity"].Brand, nullable: true }, type: { required: true, type: () => Object }, currency: { required: true, type: () => Object }, rate_time: { required: true, type: () => Number, nullable: true }, start_time: { required: true, type: () => Date }, end_time: { required: true, type: () => Date, nullable: true }, announce_time: { required: true, type: () => Date }, color: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, rate_step: { required: true, type: () => Number, nullable: true }, auction_number: { required: true, type: () => String, nullable: true }, discount: { required: true, type: () => String, nullable: true }, max_participants: { required: true, type: () => Number, nullable: true }, is_draft: { required: true, type: () => Boolean }, status: { required: true, type: () => Object }, title: { required: true, type: () => String }, start_price: { required: true, type: () => Number }, end_price: { required: true, type: () => Number }, reservation_price: { required: true, type: () => Number, nullable: true }, created_at: { required: true, type: () => Date }, updated_at: { required: true, type: () => Date }, state: { required: true, type: () => Object }, auction_participants: { required: false, type: () => [t["./auctions/entities/auction.entity"].AuctionParticipantEntity] }, reviews: { required: false, type: () => [t["./reviews/entities/review.entity"].ReviewEntity] }, images: { required: false, type: () => [t["./auctions/entities/auction.entity"].AuctionImageEntity] }, in_favorites: { required: false, type: () => Boolean }, is_booked: { required: false, type: () => Boolean }, free_spin_amount: { required: false, type: () => Number }, completed_at: { required: true, type: () => Date, nullable: true } }, "AuctionImageEntity": { auction_id: { required: true, type: () => Number }, auction_image_id: { required: true, type: () => Number }, url: { required: true, type: () => String } }, "AuctionParticipantEntity": { auction_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, auction_participant_id: { required: true, type: () => Number }, created_at: { required: true, type: () => Date }, rate: { required: true, type: () => Number }, bonus_rate: { required: true, type: () => Number }, expired_rate: { required: true, type: () => Date, nullable: true }, updated_at: { required: true, type: () => Date }, user: { required: true, type: () => t["./users/entities/user.entity"].UserEntity } }, "AuctionResponseEntity": { items: { required: true, type: () => [t["./auctions/entities/auction.entity"].AuctionEntity] } } }], [import("./auctions/dto/auction-stats.dto"), { "ParticipantStatsDto": { user_id: { required: true, type: () => Number }, username: { required: true, type: () => String }, bet_amount: { required: true, type: () => Number }, real_sum: { required: true, type: () => Number }, bonus_sum: { required: true, type: () => Number } }, "AuctionStatsDto": { auction_id: { required: true, type: () => Number }, users_balance: { required: true, type: () => Number }, lot_price: { required: true, type: () => Number }, participants: { required: true, type: () => [t["./auctions/dto/auction-stats.dto"].ParticipantStatsDto] } } }], [import("./notifications/entities/notification.entity"), { "NotificationEntity": { notification_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, type: { required: true, type: () => Object }, message: { required: true, type: () => String }, created_at: { required: true, type: () => Date }, value: { required: true, type: () => Number, nullable: true } }, "NotificationResponseEntity": { items: { required: true, type: () => [t["./notifications/entities/notification.entity"].NotificationEntity] } } }], [import("./payments/entities/transaction.entity"), { "TransactionEntity": { transaction_id: { required: true, type: () => Number }, payment_id: { required: true, type: () => String, nullable: true }, amount: { required: true, type: () => Number }, created_at: { required: true, type: () => Date }, user_id: { required: true, type: () => Number }, status: { required: true, type: () => Object }, method: { required: true, type: () => Object }, rato_amount: { required: true, type: () => Number, nullable: true }, currency: { required: true, type: () => String, nullable: true }, exchange_rate: { required: true, type: () => Number, nullable: true }, bonus_amount: { required: true, type: () => Number }, expired_at: { required: true, type: () => Date, nullable: true }, url: { required: false, type: () => String } }, "TransactionResponseEntity": { transactions: { required: true, type: () => [t["./payments/entities/transaction.entity"].TransactionEntity] }, total_items: { required: true, type: () => Number } } }], [import("./admin/entities/localization.entity"), { "LocalizationEntity": { locale_id: { required: true, type: () => Number }, language: { required: true, type: () => String }, type: { required: true, type: () => String }, reference_id: { required: true, type: () => Number }, text: { required: true, type: () => String } }, "PartialLocalizationEntity": { locale_id: { required: true, type: () => Number }, language: { required: true, type: () => String }, text: { required: true, type: () => String } }, "NewsLocalizationEntity": { locale_id: { required: true, type: () => Number }, language: { required: true, type: () => String }, title: { required: true, type: () => String }, text: { required: true, type: () => String } }, "FaqLocalizationEntity": { locale_id: { required: true, type: () => Number }, language: { required: true, type: () => String }, question: { required: true, type: () => String }, answer: { required: true, type: () => String } } }], [import("./admin/brands/entities/brand.entity"), { "BrandEntity": { auction_brand_id: { required: true, type: () => Number }, title: { required: true, type: () => String }, locales: { required: true, type: () => [t["./admin/entities/localization.entity"].PartialLocalizationEntity] } }, "BrandResponseEntity": { items: { required: true, type: () => [t["./admin/brands/entities/brand.entity"].BrandEntity] } } }], [import("./auctions/entities/category.entity"), { "CategoryEntity": { auction_category_id: { required: true, type: () => Number }, title: { required: true, type: () => String }, locales: { required: true, type: () => [t["./admin/entities/localization.entity"].PartialLocalizationEntity] } }, "CategoryResponseEntity": { items: { required: true, type: () => [t["./auctions/entities/category.entity"].CategoryEntity] } } }], [import("./news/entities/news.entity"), { "NewsEntity": { news_id: { required: true, type: () => Number }, title: { required: true, type: () => String }, text: { required: true, type: () => String }, image_url: { required: true, type: () => String, nullable: true }, created_at: { required: true, type: () => Date }, locales: { required: true, type: () => [t["./admin/entities/localization.entity"].NewsLocalizationEntity] } }, "NewsResponseEntity": { items: { required: true, type: () => [t["./news/entities/news.entity"].NewsEntity] } } }], [import("./faq/entities/faq.entity"), { "FaqEntity": { faq_id: { required: true, type: () => Number }, question: { required: true, type: () => String }, answer: { required: true, type: () => String }, locales: { required: true, type: () => [t["./admin/entities/localization.entity"].FaqLocalizationEntity] } }, "FaqResponseEntity": { items: { required: true, type: () => [t["./faq/entities/faq.entity"].FaqEntity] } } }], [import("./referrals/entities/referral.entity"), { "ReferralEntity": { referral_id: { required: true, type: () => Number }, username: { required: true, type: () => String, nullable: true }, first_name: { required: true, type: () => String, nullable: true }, last_name: { required: true, type: () => String, nullable: true }, instagram: { required: true, type: () => String, nullable: true } }, "ReferralResponseEntity": { items: { required: true, type: () => [t["./referrals/entities/referral.entity"].ReferralEntity] } } }], [import("./fortune/entities/spin-item.entity"), { "SpinItemEntity": { spin_item_id: { required: true, type: () => Number }, image_url: { required: true, type: () => String, nullable: true }, title: { required: true, type: () => String, nullable: true }, description: { required: true, type: () => String, nullable: true }, amount: { required: true, type: () => Number, nullable: true }, probability: { required: true, type: () => Number }, is_active: { required: true, type: () => Boolean }, type: { required: true, type: () => Object } }, "SpinItemResponseEntity": { items: { required: true, type: () => [t["./fortune/entities/spin-item.entity"].SpinItemEntity] } } }], [import("./fortune/entities/fortune-win.entity"), { "FortuneWinEntity": { fortune_win_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, spin_item: { required: true, type: () => t["./fortune/entities/spin-item.entity"].SpinItemEntity }, is_received: { required: true, type: () => Boolean }, created_at: { required: true, type: () => Date } }, "FortuneWinResponseEntity": { items: { required: true, type: () => [t["./fortune/entities/fortune-win.entity"].FortuneWinEntity] } } }], [import("./rato-tasks/entities/rato-task.entity"), { "RatoTaskEntity": { rato_task_id: { required: true, type: () => Number }, data: { required: true, type: () => String, nullable: true }, type: { required: true, type: () => Object }, reward_type: { required: true, type: () => Object }, reward_amount: { required: true, type: () => Number }, created_at: { required: true, type: () => Date }, updated_at: { required: true, type: () => Date }, is_completed: { required: false, type: () => Boolean } }, "RatoTaskResponseEntity": { items: { required: true, type: () => [t["./rato-tasks/entities/rato-task.entity"].RatoTaskEntity] } } }], [import("./user-tasks/entities/user-task.entity"), { "UserTaskEntity": { user_task_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, task_id: { required: true, type: () => Number }, completed_at: { required: true, type: () => Date, nullable: true } }, "UserTaskResponseEntity": { items: { required: true, type: () => [t["./user-tasks/entities/user-task.entity"].UserTaskEntity] } } }], [import("./bonuses/entities/bonus.entity"), { "BonusEntity": { bonus_id: { required: true, type: () => Number }, amount: { required: true, type: () => Number }, percent: { required: true, type: () => Number }, created_at: { required: true, type: () => Date } }, "BonusResponseEntity": { items: { required: true, type: () => [t["./bonuses/entities/bonus.entity"].BonusEntity] } } }], [import("./promocodes/entities/promocode.entity"), { "PromocodeEntity": { promocode_id: { required: true, type: () => Number }, code: { required: true, type: () => String }, replinish_bonus: { required: true, type: () => Number }, activation_count: { required: true, type: () => Number, nullable: true }, current_count: { required: true, type: () => Number }, created_at: { required: true, type: () => Date } }, "PromocodeResponseEntity": { items: { required: true, type: () => [t["./promocodes/entities/promocode.entity"].PromocodeEntity] } } }], [import("./admin/dto/localization.dto"), { "LocalizationDto": { language: { required: true, type: () => String }, text: { required: true, type: () => String } }, "NewsLocalizationDto": { language: { required: true, type: () => String }, title: { required: true, type: () => String }, text: { required: true, type: () => String } }, "FaqLocalizationDto": { language: { required: true, type: () => String }, question: { required: true, type: () => String }, answer: { required: true, type: () => String } } }], [import("./common/dto/status.dto"), { "StatusOKDto": { status: { required: true, type: () => String, default: "OK" } } }], [import("./auth/dto/login.dto"), { "LoginUserDto": { email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String } }, "LoginResponseDto": { access_token: { required: true, type: () => String }, refresh_token: { required: true, type: () => String } }, "RefreshTokenDto": { refresh_token: { required: true, type: () => String } } }], [import("./referrals/dto/check-code.dto"), { "CheckReferralCodeResponseDto": { is_correct: { required: true, type: () => Boolean } } }], [import("./settings/entities/settings.entity"), { "SettingsEntity": { settings_id: { required: true, type: () => Number }, cost_per_spin: { required: true, type: () => Number }, first_deposit_bonus: { required: true, type: () => Number } } }], [import("./bots/entities/bot.entity"), { "BotEntity": { bot_id: { required: true, type: () => Number }, auction_id: { required: true, type: () => Number, nullable: true }, is_active: { required: true, type: () => Boolean }, strategy_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number } } }], [import("./bots/dto/bot-stats.dto"), { "BotStatsDto": { totalBids: { required: true, type: () => Number }, totalAmount: { required: true, type: () => Number }, latestBidAt: { required: true, type: () => Date }, uniqueAuctions: { required: true, type: () => Number } } }], [import("./bots/entities/bot-strategy.entity"), { "BotStrategyEntity": { bot_strategy_id: { required: true, type: () => Number }, type: { required: true, type: () => Object }, max_bid_amount: { required: true, type: () => Number, nullable: true }, min_bid_amount: { required: true, type: () => Number, nullable: true }, max_participants_on_activate: { required: true, type: () => Number, nullable: true }, min_participants_on_activate: { required: true, type: () => Number, nullable: true }, time_from_start: { required: true, type: () => Number, nullable: true }, time_to_end: { required: true, type: () => Number, nullable: true } } }], [import("./geo/dto/geo.dto"), { "CountryDto": { country: { required: true, type: () => String }, country_code: { required: true, type: () => String } }, "CityDto": { city: { required: true, type: () => String }, state: { required: true, type: () => String }, zip: { required: true, type: () => String } }, "StreetDto": { type: { required: true, type: () => String }, properties: { required: true, type: () => ({ country: { required: true, type: () => String }, country_code: { required: true, type: () => String }, region: { required: true, type: () => String }, state: { required: true, type: () => String }, county: { required: true, type: () => String }, postcode: { required: true, type: () => String }, street: { required: true, type: () => String }, iso3166_2: { required: true, type: () => String }, datasource: { required: true, type: () => ({ sourcename: { required: true, type: () => String }, attribution: { required: true, type: () => String }, license: { required: true, type: () => String }, url: { required: true, type: () => String } }) }, lon: { required: true, type: () => Number }, lat: { required: true, type: () => Number }, result_type: { required: true, type: () => String }, formatted: { required: true, type: () => String }, address_line1: { required: true, type: () => String }, address_line2: { required: true, type: () => String }, timezone: { required: true, type: () => ({ name: { required: true, type: () => String }, offset_STD: { required: true, type: () => String }, offset_STD_seconds: { required: true, type: () => Number }, offset_DST: { required: true, type: () => String }, offset_DST_seconds: { required: true, type: () => Number }, abbreviation_STD: { required: true, type: () => String }, abbreviation_DST: { required: true, type: () => String } }) }, plus_code: { required: true, type: () => String }, rank: { required: true, type: () => ({ confidence: { required: true, type: () => Number }, confidence_city_level: { required: true, type: () => Number }, confidence_street_level: { required: true, type: () => Number }, match_type: { required: true, type: () => String } }) }, place_id: { required: true, type: () => String } }) }, geometry: { required: true, type: () => ({ type: { required: true, type: () => String }, coordinates: { required: true, type: () => [Number] } }) }, bbox: { required: true, type: () => [Number] } } }], [import("./common/dto/create-common.dto"), { "CreateCommonDto": {} }], [import("./common/dto/update-common.dto"), { "UpdateCommonDto": {} }], [import("./common/entities/common.entity"), { "CommonEntity": { id: { required: true, type: () => Number } }, "CommonResponseEntity": { items: { required: true } } }], [import("./users/dto/update-user.dto"), { "UpdateUserDto": { avatar: { required: false, type: () => Object }, username: { required: false, type: () => String }, language: { required: true, type: () => String }, instagram: { required: false, type: () => String }, phone_number: { required: false, type: () => String }, mail_promo: { required: false, type: () => Boolean }, mail_rate_result: { required: false, type: () => Boolean }, mail_new_auctions: { required: false, type: () => Boolean }, first_name: { required: false, type: () => String }, last_name: { required: false, type: () => String }, email: { required: false, type: () => String } } }], [import("./auth/dto/jwt.dto"), { "JwtUserPayloadDto": { id: { required: true, type: () => Number }, email: { required: true, type: () => String } } }], [import("./auth/dto/reset-password.dto"), { "ResetPasswordDto": { email: { required: true, type: () => String, format: "email" } } }], [import("./auth/dto/confirm-password.dto"), { "ConfirmPasswordDto": { code: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./auth/dto/change-password.dto"), { "ChangePasswordDto": { old_password: { required: true, type: () => String }, new_password: { required: true, type: () => String } } }], [import("./auth/dto/mail-confrim.dto"), { "MailConfirmationDto": { email: { required: true, type: () => String, format: "email" } }, "MailConfirmationCodeDto": { email: { required: true, type: () => String, format: "email" }, code: { required: true, type: () => Number } } }], [import("./auth/dto/telegram-login.dto"), { "TelegramLoginDto": { id: { required: true, type: () => String }, hash: { required: true, type: () => String }, photo_url: { required: false, type: () => String }, username: { required: false, type: () => String }, first_name: { required: false, type: () => String }, last_name: { required: false, type: () => String }, auth_date: { required: false, type: () => String } } }], [import("./config/ip-api/dto/ip-api.dto"), { "IpInfoDto": { city: { required: true, type: () => String }, countryCode: { required: true, type: () => String }, hosting: { required: true, type: () => Boolean }, isp: { required: true, type: () => String }, lat: { required: true, type: () => Number }, lon: { required: true, type: () => Number }, mobile: { required: true, type: () => Boolean }, proxy: { required: true, type: () => Boolean }, regionName: { required: true, type: () => String }, status: { required: true, type: () => String }, zip: { required: true, type: () => String } } }], [import("./auctions/dto/create-auction.dto"), { "CreateAuctionDto": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, color: { required: true, type: () => String, minLength: 7, maxLength: 9 }, start_price: { required: true, type: () => Number }, end_price: { required: true, type: () => Number }, rate_step: { required: true, type: () => Number }, brand_id: { required: true, type: () => Number }, rate_time: { required: true, type: () => Number }, reservation_price: { required: true, type: () => Number }, category_id: { required: true, type: () => Number }, type: { required: true, type: () => Object }, currency: { required: true, type: () => Object }, status: { required: true, type: () => Object }, state: { required: true, type: () => Object }, start_time: { required: true, type: () => Date }, is_draft: { required: true, type: () => Boolean }, announce_time: { required: true, type: () => Date }, end_time: { required: false, type: () => Date }, max_participants: { required: true, type: () => Number }, images: { required: false, type: () => Object }, discount: { required: false, type: () => String } } }], [import("./auctions/dto/update-auction.dto"), { "UpdateAuctionDto": {} }], [import("./common/params/pagination.params.dto"), { "PaginateParams": { skip: { required: false, type: () => Number }, take: { required: false, type: () => Number } } }], [import("./auctions/params/auction.params.dto"), { "AuctionParams": { title: { required: false, type: () => String }, type: { required: false, type: () => Object }, category_id: { required: false, type: () => Number }, brand_id: { required: false, type: () => Number }, status: { required: false, type: () => String }, is_draft: { required: false, type: () => Boolean }, in_favorites: { required: false, type: () => Boolean }, is_participant: { required: false, type: () => Boolean } } }], [import("./notifications/dto/create-notification.dto"), { "CreateNotificationDto": { type: { required: true, type: () => Object }, message: { required: true, type: () => String }, value: { required: false, type: () => Number } } }], [import("./config/avrMoney/dto/invoice.dto"), { "InvoiceDto": { id: { required: true, type: () => String }, shop: { required: true, type: () => String }, pair: { required: true, type: () => String }, amount: { required: true, type: () => Number }, url: { required: true, type: () => String }, redirect_url: { required: true, type: () => String }, chat: { required: true, type: () => String }, client_id: { required: true }, client_type: { required: true, type: () => Number } } }], [import("./payments/dto/create-invoice.dto"), { "CreateInvoiceDto": { amount: { required: true, type: () => Number }, promocode: { required: false, type: () => String }, redirect_url: { required: true, type: () => String }, is_bonus_applied: { required: false, type: () => Boolean }, is_promo_applied: { required: false, type: () => Boolean } }, "CreateInvoiceCallbackDto": { invoice_id: { required: true, type: () => String }, state: { required: true, type: () => Number } } }], [import("./reviews/dto/create-review.dto"), { "CreateReviewDto": { auction_id: { required: true, type: () => Number }, comment: { required: true, type: () => String }, media: { required: false, type: () => Object } } }], [import("./admin/dto/admin-login.dto"), { "AdminLoginDto": { login: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./admin/brands/dto/create-brand.dto"), { "CreateBrandLocalizationDto": { locale_id: { required: true, type: () => Number }, language: { required: true, type: () => String }, text: { required: true, type: () => String } }, "CreateBrandDto": { title: { required: true, type: () => String }, locales: { required: true, type: () => [t["./admin/dto/localization.dto"].LocalizationDto] } } }], [import("./admin/brands/dto/update-brand.dto"), { "UpdateBrandDto": {} }], [import("./admin/categories/dto/create-category.dto"), { "CreateCategoryDto": { title: { required: true, type: () => String }, locales: { required: true, type: () => [t["./admin/dto/localization.dto"].LocalizationDto] } } }], [import("./admin/categories/dto/update-category.dto"), { "UpdateCategoryDto": {} }], [import("./news/dto/create-news.dto"), { "CreateNewsDto": { image: { required: false, type: () => Object }, title: { required: true, type: () => String }, text: { required: true, type: () => String }, locales: { required: true, type: () => [t["./admin/dto/localization.dto"].NewsLocalizationDto] } } }], [import("./news/dto/update-news.dto"), { "UpdateNewsDto": {} }], [import("./faq/dto/create-faq.dto"), { "CreateFaqDto": { question: { required: true, type: () => String }, answer: { required: true, type: () => String }, locales: { required: true, type: () => [t["./admin/dto/localization.dto"].FaqLocalizationDto] } } }], [import("./faq/dto/update-faq.dto"), { "UpdateFaqDto": {} }], [import("./fortune/dto/create-item.dto"), { "CreateItemDto": { title: { required: false, type: () => String }, description: { required: false, type: () => String }, type: { required: true, type: () => Object }, amount: { required: false, type: () => Number }, probability: { required: true, type: () => Number }, image: { required: false, type: () => String } } }], [import("./fortune/dto/update-item.dto"), { "UpdateItemDto": {} }], [import("./fortune/dto/is-active.dto"), { "SetIsActiveDto": { item_ids: { required: true, type: () => [Number] } } }], [import("./fortune/dto/create-win-item.dto"), { "CreateWinItemDto": { spin_item_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, is_received: { required: true, type: () => Boolean } } }], [import("./fortune/dto/update-win-item.dto"), { "UpdateWinItemDto": {} }], [import("./settings/dto/settings.dto"), { "UpdateSettingsDto": { cost_per_spin: { required: false, type: () => Number }, first_deposit_bonus: { required: false, type: () => Number } } }], [import("./rato-tasks/dto/create-task.dto"), { "CreateTaskDto": { type: { required: true, type: () => Object }, data: { required: false, type: () => String }, reward_type: { required: true, type: () => Object }, reward_amount: { required: true, type: () => Number } } }], [import("./rato-tasks/dto/update-task.dto"), { "UpdateTaskDto": {} }], [import("./user-tasks/dto/create-task.dto"), { "CreateUserTaskDto": { task_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, completed_at: { required: false, type: () => Date } } }], [import("./user-tasks/dto/update-task.dto"), { "UpdateUserTaskDto": {} }], [import("./bots/dto/create-bot.dto"), { "CreateBotDto": { strategy_id: { required: true, type: () => Number }, auction_id: { required: false, type: () => Number }, user_id: { required: true, type: () => Number }, is_active: { required: true, type: () => Boolean } } }], [import("./bots/dto/create-bot-strategy.dto"), { "CreateBotStrategyDto": { type: { required: true, type: () => Object }, max_participants_on_activate: { required: false, type: () => Number }, min_participants_on_activate: { required: false, type: () => Number }, min_bid_amount: { required: false, type: () => Number }, max_bid_amount: { required: false, type: () => Number }, time_from_start: { required: false, type: () => Number }, time_to_end: { required: false, type: () => Number } } }], [import("./bonuses/dto/create-bonus.dto"), { "CreateBonusDto": { amount: { required: true, type: () => Number }, percent: { required: true, type: () => Number } } }], [import("./bonuses/dto/update-bonus.dto"), { "UpdateBonusDto": { amount: { required: false, type: () => Number }, percent: { required: false, type: () => Number } } }], [import("./promocodes/dto/create-promocode.dto"), { "CreatePromocodeDto": { code: { required: true, type: () => String }, replinish_bonus: { required: true, type: () => Number }, activation_count: { required: false, type: () => Number } } }], [import("./promocodes/dto/update-promocode.dto"), { "UpdatePromocodeDto": { code: { required: false, type: () => String }, replinish_bonus: { required: false, type: () => Number }, activation_count: { required: false, type: () => Number }, current_count: { required: false, type: () => Number } } }], [import("./auctions/dto/create-participant.dto"), { "CreateParticipantDto": { auction_id: { required: true, type: () => Number } } }], [import("./referrals/dto/ref-info.dto"), { "RefInfoDto": { referral_code: { required: true, type: () => String }, total_referrals: { required: true, type: () => Number }, active_referrals: { required: true, type: () => Number } } }], [import("./users/dto/create-user.dto"), { "CreateUserDto": { name: { required: true, type: () => String }, email: { required: true, type: () => String } } }], [import("./users/entities/userAlias.entity"), { "UserAliasEntity": { user_alias_id: { required: true, type: () => Number }, user_id: { required: true, type: () => Number }, alias_type: { required: true, type: () => Object }, value: { required: true, type: () => String }, proof: { required: true, type: () => String } } }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: Number } } }], [import("./users/users.controller"), { "UsersController": { "getMe": { type: Object }, "patchMe": { type: t["./users/entities/user.entity"].UserEntity }, "creditTokens": { type: t["./common/dto/status.dto"].StatusOKDto }, "withdrawTokens": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./auth/auth.controller"), { "AuthController": { "registration": { type: t["./common/dto/status.dto"].StatusOKDto }, "login": { type: t["./auth/dto/login.dto"].LoginResponseDto }, "mailConfirmation": { type: t["./common/dto/status.dto"].StatusOKDto }, "mailConfirmationCode": { type: t["./common/dto/status.dto"].StatusOKDto }, "changePassword": { type: t["./common/dto/status.dto"].StatusOKDto }, "refresh": { type: t["./auth/dto/login.dto"].LoginResponseDto }, "resetPassword": { type: t["./common/dto/status.dto"].StatusOKDto }, "confirmPassword": { type: t["./common/dto/status.dto"].StatusOKDto }, "telegramLogin": { type: t["./auth/dto/login.dto"].LoginResponseDto }, "bindAuthData": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./auctions/auctions.controller"), { "AuctionsController": { "findAll": { type: t["./auctions/entities/auction.entity"].AuctionResponseEntity }, "findOne": { type: Object }, "create": { type: t["./auctions/entities/auction.entity"].AuctionEntity }, "deleteAuctionParticipant": {}, "update": { type: t["./auctions/entities/auction.entity"].AuctionEntity }, "bookAuction": {}, "makeRate": {}, "remove": { type: t["./common/dto/status.dto"].StatusOKDto }, "addToFavorites": {}, "removeFromFavorites": {}, "getAuctionStats": { type: Object } } }], [import("./notifications/notifications.controller"), { "NotificationsController": { "getUserNotifcations": { type: t["./notifications/entities/notification.entity"].NotificationResponseEntity } } }], [import("./payments/payments.controller"), { "PaymentsController": { "getTransactions": { type: t["./payments/entities/transaction.entity"].TransactionResponseEntity }, "createInvoice": { type: t["./payments/entities/transaction.entity"].TransactionEntity }, "createInvoiceCallback": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./reviews/reviews.controller"), { "ReviewsController": { "findAll": { type: t["./reviews/entities/review.entity"].ReviewResponseEntity }, "createReview": { type: t["./reviews/entities/review.entity"].ReviewEntity } } }], [import("./admin/admin.controller"), { "AdminController": { "getAllUsers": { type: [t["./users/entities/user.entity"].UserEntity] }, "getUser": { type: t["./users/entities/user.entity"].UserEntity }, "getUserInfo": { type: t["./admin/dto/user-detail.dto"].UserDetailDto }, "verifyAdmin": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./admin/brands/brands.controller"), { "BrandsController": { "create": { type: t["./admin/brands/entities/brand.entity"].BrandEntity }, "findAll": { type: t["./admin/brands/entities/brand.entity"].BrandResponseEntity }, "findOne": { type: Object }, "update": { type: t["./admin/brands/entities/brand.entity"].BrandEntity }, "remove": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./admin/categories/categories.controller"), { "CategoriesController": { "create": { type: t["./auctions/entities/category.entity"].CategoryEntity }, "findAll": { type: t["./auctions/entities/category.entity"].CategoryResponseEntity }, "findOne": { type: Object }, "update": { type: t["./auctions/entities/category.entity"].CategoryEntity }, "remove": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./news/news.controller"), { "NewsController": { "findAll": { type: t["./news/entities/news.entity"].NewsResponseEntity }, "findOne": { type: Object }, "create": { type: t["./news/entities/news.entity"].NewsEntity }, "update": { type: t["./news/entities/news.entity"].NewsEntity }, "remove": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./faq/faq.controller"), { "FaqController": { "findAll": { type: t["./faq/entities/faq.entity"].FaqResponseEntity }, "findOne": { type: Object }, "create": { type: t["./faq/entities/faq.entity"].FaqEntity }, "update": { type: t["./faq/entities/faq.entity"].FaqEntity }, "remove": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./referrals/referrals.controller"), { "ReferralsController": { "checkRefCode": { type: t["./referrals/dto/check-code.dto"].CheckReferralCodeResponseDto }, "findAll": { type: t["./referrals/entities/referral.entity"].ReferralResponseEntity } } }], [import("./fortune/fortune.controller"), { "FortuneController": { "getSpinItems": { type: t["./fortune/entities/spin-item.entity"].SpinItemResponseEntity }, "getSpinItem": { type: t["./fortune/entities/spin-item.entity"].SpinItemEntity }, "getActiveSpinItems": { type: t["./fortune/entities/spin-item.entity"].SpinItemResponseEntity }, "createSpinItem": { type: t["./fortune/entities/spin-item.entity"].SpinItemEntity }, "updateSpinItem": { type: t["./fortune/entities/spin-item.entity"].SpinItemEntity }, "deleteSpinItem": { type: t["./common/dto/status.dto"].StatusOKDto }, "setIsActive": { type: t["./common/dto/status.dto"].StatusOKDto }, "spin": { type: t["./fortune/entities/spin-item.entity"].SpinItemEntity } } }], [import("./fortune/fortune-wins.controller"), { "FortuneWinsController": { "findAll": { type: t["./fortune/entities/fortune-win.entity"].FortuneWinResponseEntity }, "create": { type: t["./fortune/entities/fortune-win.entity"].FortuneWinEntity }, "update": { type: t["./fortune/entities/fortune-win.entity"].FortuneWinEntity }, "remove": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./settings/settings.controller"), { "SettingsController": { "getSettings": { type: t["./settings/entities/settings.entity"].SettingsEntity }, "updateSettings": { type: t["./settings/entities/settings.entity"].SettingsEntity } } }], [import("./rato-tasks/rato-tasks.controller"), { "RatoTasksController": { "getRatoTasks": { type: t["./rato-tasks/entities/rato-task.entity"].RatoTaskResponseEntity }, "getRatoTaskById": { type: t["./rato-tasks/entities/rato-task.entity"].RatoTaskEntity }, "createRatoTask": { type: t["./rato-tasks/entities/rato-task.entity"].RatoTaskEntity }, "updateRatoTask": { type: t["./rato-tasks/entities/rato-task.entity"].RatoTaskEntity }, "deleteRatoTask": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./user-tasks/user-tasks.controller"), { "UserTasksController": { "getUserTasks": { type: t["./user-tasks/entities/user-task.entity"].UserTaskResponseEntity }, "getUserTaskById": { type: t["./user-tasks/entities/user-task.entity"].UserTaskEntity }, "createUserTask": { type: t["./user-tasks/entities/user-task.entity"].UserTaskEntity }, "completeUserTask": { type: t["./user-tasks/entities/user-task.entity"].UserTaskEntity }, "updateUserTask": { type: t["./user-tasks/entities/user-task.entity"].UserTaskEntity }, "deleteUserTask": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./bots/bots.controller"), { "BotsController": { "toggleBot": { type: t["./bots/entities/bot.entity"].BotEntity }, "getBotStats": { type: t["./bots/dto/bot-stats.dto"].BotStatsDto }, "getBots": { type: [t["./bots/entities/bot.entity"].BotEntity] }, "createBotUser": { type: t["./users/entities/user.entity"].UserEntity }, "createBot": { type: t["./bots/entities/bot.entity"].BotEntity }, "updateBot": { type: t["./bots/entities/bot.entity"].BotEntity }, "deleteBot": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./bots/bots-strategy.controller"), { "BotsStrategyController": { "getBotsStrategy": { type: [t["./bots/entities/bot-strategy.entity"].BotStrategyEntity] }, "createBotStrategy": { type: t["./bots/entities/bot-strategy.entity"].BotStrategyEntity }, "updateBotStrategy": { type: t["./bots/entities/bot-strategy.entity"].BotStrategyEntity }, "deleteBotStrategy": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./bonuses/bonuses.controller"), { "BonusesController": { "create": { type: t["./bonuses/entities/bonus.entity"].BonusEntity }, "findAll": { type: t["./bonuses/entities/bonus.entity"].BonusResponseEntity }, "findOne": { type: Object }, "update": { type: t["./bonuses/entities/bonus.entity"].BonusEntity }, "remove": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./promocodes/promocodes.controller"), { "PromocodesController": { "create": { type: t["./promocodes/entities/promocode.entity"].PromocodeEntity }, "findAll": { type: t["./promocodes/entities/promocode.entity"].PromocodeResponseEntity }, "findByCode": { type: Object }, "findOne": { type: Object }, "update": { type: t["./promocodes/entities/promocode.entity"].PromocodeEntity }, "remove": { type: t["./common/dto/status.dto"].StatusOKDto } } }], [import("./geo/geo.controller"), { "GeoController": { "getGeo": { type: [t["./geo/dto/geo.dto"].CountryDto] }, "getCity": { type: [t["./geo/dto/geo.dto"].CityDto] }, "getStreet": { type: [t["./geo/dto/geo.dto"].StreetDto] } } }]] } };
};